#!/bin/bash
#
# check_nx_localkey
# Kyle Anderson, 2011, Under the GPL 2

# Nrpe check to ensure that the nx user can ssh to 127.0.0.1 for normal user auth
# NX ssh's to localhost, if it can't you will get login failures with less
# than helpful messages

# Requires this sudo line:
# nagios ALL=(nx) NOPASSWD: /usr/bin/ssh -o StrictHostKeyChecking=yes -o PasswordAuthentication=no -i /var//lib/nxserver/home/.ssh/client.id_dsa.key nx@127.0.0.1

# check for plugin directory where utils.sh lives
[ -d /usr/lib/nagios/plugins ]   && UTILPATH=/usr/lib/nagios/plugins
[ -d /usr/lib64/nagios/plugins ] && UTILPATH=/usr/lib64/nagios/plugins

#  load states and strings
if [ -x "$UTILPATH"/utils.sh ]; then
        . "$UTILPATH"/utils.sh
else
        echo "ERROR: Cannot find utils.sh"
        exit
fi

# This requires some explaination

#We are sending the quit command, because the nx user just runs the nx server, which will wait, quit will make it quit
# This is the acutal sudo which is needed, we have to sudo to nx, but nx ssh's to itself for the real auth
# No password promts, we are detecting if the local ssh key works
if echo quit | sudo  -u nx /usr/bin/ssh  -o StrictHostKeyChecking=yes -o PasswordAuthentication=no -i /var//lib/nxserver/home/.ssh/client.id_dsa.key nx@127.0.0.1 > /dev/null ; then
   echo "OK: The NX user can ssh to 127.0.0.1 properly"
   exit $STATE_OK
else
   echo "CRITICAL: The NX user could not ssh to nx@127.0.0.1, please check the key"
   exit $STATE_CRITICAL
fi
